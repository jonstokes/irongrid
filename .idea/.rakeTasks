<?xml version="1.0" encoding="UTF-8"?>
<Settings><!--This file was automatically generated by Ruby plugin.
You are allowed to: 
1. Remove rake task
2. Add existing rake tasks
To add existing rake tasks automatically delete this file and reload the project.
--><RakeGroup description="" fullCmd="" taksId="rake"><RakeTask description="List versions of all Rails frameworks and the environment" fullCmd="about" taksId="about" /><RakeGroup description="" fullCmd="" taksId="airbrake"><RakeTask description="Notify Airbrake of a new deploy" fullCmd="airbrake:deploy" taksId="deploy" /><RakeGroup description="" fullCmd="" taksId="heroku"><RakeTask description="Install Heroku deploy notifications addon" fullCmd="airbrake:heroku:add_deploy_notification" taksId="add_deploy_notification" /></RakeGroup><RakeTask description="Verify your gem installation by sending a test exception to the airbrake service" fullCmd="airbrake:test" taksId="test" /><RakeTask description="" fullCmd="airbrake:log_stdout" taksId="log_stdout" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="assets"><RakeTask description="Remove old compiled assets" fullCmd="assets:clean[keep]" taksId="clean[keep]" /><RakeTask description="Remove compiled assets" fullCmd="assets:clobber" taksId="clobber" /><RakeTask description="Load asset compile environment" fullCmd="assets:environment" taksId="environment" /><RakeTask description="Compile all the assets named in config.assets.precompile" fullCmd="assets:precompile" taksId="precompile" /><RakeTask description="" fullCmd="assets:clean" taksId="clean" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="cache_digests"><RakeTask description="Lookup first-level dependencies for TEMPLATE (like messages/show or comments/_comment.html)" fullCmd="cache_digests:dependencies" taksId="dependencies" /><RakeTask description="Lookup nested dependencies for TEMPLATE (like messages/show or comments/_comment.html)" fullCmd="cache_digests:nested_dependencies" taksId="nested_dependencies" /></RakeGroup><RakeTask description="Check image urls" fullCmd="check_image_urls" taksId="check_image_urls" /><RakeTask description="Check test listings for errors" fullCmd="check_test_listings" taksId="check_test_listings" /><RakeTask description="Alias for cucumber:ok" fullCmd="cucumber" taksId="cucumber" /><RakeGroup description="" fullCmd="" taksId="cucumber"><RakeTask description="Run all features" fullCmd="cucumber:all" taksId="all" /><RakeTask description="Run features that should pass" fullCmd="cucumber:ok" taksId="ok" /><RakeTask description="Record failing features and run only them if any exist" fullCmd="cucumber:rerun" taksId="rerun" /><RakeTask description="Run features that are being worked on" fullCmd="cucumber:wip" taksId="wip" /><RakeTask description="" fullCmd="cucumber:statsetup" taksId="statsetup" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="db"><RakeGroup description="" fullCmd="" taksId="copy"><RakeTask description="Copy listings from one env to another" fullCmd="db:copy:listings" taksId="listings" /><RakeTask description="Copy parser tests from one env to another" fullCmd="db:copy:parser_tests" taksId="parser_tests" /><RakeTask description="Copy Parser Tests to fixtures" fullCmd="db:copy:parser_tests_to_fixtures" taksId="parser_tests_to_fixtures" /></RakeGroup><RakeTask description="Create the database from DATABASE_URL or config/database.yml for the current Rails.env (use db:create:all to create all dbs in the config)" fullCmd="db:create" taksId="create" /><RakeTask description="Drops the database using DATABASE_URL or the current Rails.env (use db:drop:all to drop all databases)" fullCmd="db:drop" taksId="drop" /><RakeGroup description="" fullCmd="" taksId="fixtures"><RakeTask description="Load fixtures into the current environment's database" fullCmd="db:fixtures:load" taksId="load" /><RakeTask description="" fullCmd="db:fixtures:identify" taksId="identify" /></RakeGroup><RakeTask description="Migrate the database (options: VERSION=x, VERBOSE=false, SCOPE=blog)" fullCmd="db:migrate" taksId="migrate" /><RakeGroup description="" fullCmd="" taksId="migrate"><RakeTask description="Display status of migrations" fullCmd="db:migrate:status" taksId="status" /><RakeTask description="" fullCmd="db:migrate:down" taksId="down" /><RakeTask description="" fullCmd="db:migrate:redo" taksId="redo" /><RakeTask description="" fullCmd="db:migrate:reset" taksId="reset" /><RakeTask description="" fullCmd="db:migrate:up" taksId="up" /></RakeGroup><RakeTask description="Rolls the schema back to the previous version (specify steps w/ STEP=n)" fullCmd="db:rollback" taksId="rollback" /><RakeGroup description="" fullCmd="" taksId="schema"><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="Clear a db/schema_cache.dump file" fullCmd="db:schema:cache:clear" taksId="clear" /><RakeTask description="Create a db/schema_cache.dump file" fullCmd="db:schema:cache:dump" taksId="dump" /></RakeGroup><RakeTask description="Create a db/schema.rb file that can be portably used against any DB supported by AR" fullCmd="db:schema:dump" taksId="dump" /><RakeTask description="Load a schema.rb file into the database" fullCmd="db:schema:load" taksId="load" /><RakeTask description="" fullCmd="db:schema:load_if_ruby" taksId="load_if_ruby" /></RakeGroup><RakeTask description="Load the seed data from db/seeds.rb" fullCmd="db:seed" taksId="seed" /><RakeTask description="Create the database, load the schema, and initialize with the seed data (use db:reset to also drop the db first)" fullCmd="db:setup" taksId="setup" /><RakeGroup description="" fullCmd="" taksId="structure"><RakeTask description="Dump the database structure to db/structure.sql" fullCmd="db:structure:dump" taksId="dump" /><RakeTask description="" fullCmd="db:structure:load" taksId="load" /><RakeTask description="" fullCmd="db:structure:load_if_sql" taksId="load_if_sql" /></RakeGroup><RakeTask description="Retrieves the current schema version number" fullCmd="db:version" taksId="version" /><RakeTask description="" fullCmd="db:_dump" taksId="_dump" /><RakeTask description="" fullCmd="db:abort_if_pending_migrations" taksId="abort_if_pending_migrations" /><RakeTask description="" fullCmd="db:charset" taksId="charset" /><RakeTask description="" fullCmd="db:collation" taksId="collation" /><RakeGroup description="" fullCmd="" taksId="create"><RakeTask description="" fullCmd="db:create:all" taksId="all" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="drop"><RakeTask description="" fullCmd="db:drop:all" taksId="all" /></RakeGroup><RakeTask description="" fullCmd="db:forward" taksId="forward" /><RakeTask description="" fullCmd="db:load_config" taksId="load_config" /><RakeTask description="" fullCmd="db:reset" taksId="reset" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="" fullCmd="db:test:clone" taksId="clone" /><RakeTask description="" fullCmd="db:test:clone_schema" taksId="clone_schema" /><RakeTask description="" fullCmd="db:test:clone_structure" taksId="clone_structure" /><RakeTask description="" fullCmd="db:test:load" taksId="load" /><RakeTask description="" fullCmd="db:test:load_schema" taksId="load_schema" /><RakeTask description="" fullCmd="db:test:load_structure" taksId="load_structure" /><RakeTask description="" fullCmd="db:test:prepare" taksId="prepare" /><RakeTask description="" fullCmd="db:test:purge" taksId="purge" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="doc"><RakeTask description="Generate docs for the app -- also available doc:rails, doc:guides (options: TEMPLATE=/rdoc-template.rb, TITLE=&quot;Custom Title&quot;)" fullCmd="doc:app" taksId="app" /><RakeTask description="" fullCmd="doc:clobber" taksId="clobber" /><RakeTask description="" fullCmd="doc:clobber_app" taksId="clobber_app" /><RakeTask description="" fullCmd="doc:clobber_rails" taksId="clobber_rails" /><RakeTask description="" fullCmd="doc:guides" taksId="guides" /><RakeTask description="" fullCmd="doc:rails" taksId="rails" /><RakeTask description="" fullCmd="doc:reapp" taksId="reapp" /><RakeTask description="" fullCmd="doc:rerails" taksId="rerails" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="figaro"><RakeTask description="Configure Heroku according to application.yml" fullCmd="figaro:heroku[app]" taksId="heroku[app]" /><RakeTask description="" fullCmd="figaro:heroku" taksId="heroku" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="geocode"><RakeTask description="Geocode all objects without coordinates" fullCmd="geocode:all" taksId="all" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="log"><RakeTask description="Truncates all *.log files in log/ to zero bytes (specify which logs with LOGS=test,development)" fullCmd="log:clear" taksId="clear" /></RakeGroup><RakeTask description="Prints out your Rack middleware stack" fullCmd="middleware" taksId="middleware" /><RakeTask description="Enumerate all annotations (use notes:optimize, :fixme, :todo for focus)" fullCmd="notes" taksId="notes" /><RakeGroup description="" fullCmd="" taksId="notes"><RakeTask description="Enumerate a custom annotation, specify with ANNOTATION=CUSTOM" fullCmd="notes:custom" taksId="custom" /><RakeTask description="" fullCmd="notes:fixme" taksId="fixme" /><RakeTask description="" fullCmd="notes:optimize" taksId="optimize" /><RakeTask description="" fullCmd="notes:todo" taksId="todo" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="rails"><RakeTask description="Applies the template supplied by LOCATION=(/path/to/template) or URL" fullCmd="rails:template" taksId="template" /><RakeTask description="Update configs and some other initially generated files (or use just update:configs, update:bin, or update:application_controller)" fullCmd="rails:update" taksId="update" /><RakeGroup description="" fullCmd="" taksId="templates"><RakeTask description="" fullCmd="rails:templates:copy" taksId="copy" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="update"><RakeTask description="" fullCmd="rails:update:application_controller" taksId="application_controller" /><RakeTask description="" fullCmd="rails:update:bin" taksId="bin" /><RakeTask description="" fullCmd="rails:update:configs" taksId="configs" /></RakeGroup></RakeGroup><RakeTask description="Print out all defined routes in match order, with names" fullCmd="routes" taksId="routes" /><RakeTask description="Generate a cryptographically secure secret key (this is typically used to generate a secret for cookie sessions)" fullCmd="secret" taksId="secret" /><RakeGroup description="" fullCmd="" taksId="site"><RakeTask description="Add new sites from site manifest to redis" fullCmd="site:add_new" taksId="add_new" /><RakeTask description="Copy a site from the local repo to redis" fullCmd="site:copy" taksId="copy" /><RakeTask description="Copy all sites from github to redis" fullCmd="site:copy_all" taksId="copy_all" /><RakeTask description="Remove deactivated sites" fullCmd="site:delete_dead" taksId="delete_dead" /><RakeTask description="Create site fixtures from local repo" fullCmd="site:generate_fixtures" taksId="generate_fixtures" /><RakeTask description="Re-run product feeds" fullCmd="site:rerun_product_feeds" taksId="rerun_product_feeds" /><RakeTask description="Roll back listing updates from a period of days" fullCmd="site:rollback_listing_updates" taksId="rollback_listing_updates" /><RakeTask description="Jumpstart scrapes on sites with link_data" fullCmd="site:scrape_all" taksId="scrape_all" /><RakeTask description="Run stats for all active sites" fullCmd="site:stats" taksId="stats" /><RakeTask description="Update site attributes without overwriting stats" fullCmd="site:update_all" taksId="update_all" /><RakeTask description="" fullCmd="site:flag_session_queues" taksId="flag_session_queues" /><RakeTask description="" fullCmd="site:load_scripts" taksId="load_scripts" /><RakeTask description="" fullCmd="site:restore_prefixes" taksId="restore_prefixes" /></RakeGroup><RakeTask description="Run all specs in spec directory (excluding plugin specs)" fullCmd="spec" taksId="spec" /><RakeGroup description="" fullCmd="" taksId="spec"><RakeTask description="Run the code examples in spec/interactors" fullCmd="spec:interactors" taksId="interactors" /><RakeTask description="Run the code examples in spec/models" fullCmd="spec:models" taksId="models" /><RakeTask description="Run the code examples in spec/modules" fullCmd="spec:modules" taksId="modules" /><RakeTask description="Run the code examples in spec/services" fullCmd="spec:services" taksId="services" /><RakeTask description="Run the code examples in spec/workers" fullCmd="spec:workers" taksId="workers" /><RakeTask description="" fullCmd="spec:statsetup" taksId="statsetup" /></RakeGroup><RakeTask description="Report code statistics (KLOCs, etc) from the application" fullCmd="stats" taksId="stats" /><RakeGroup description="" fullCmd="" taksId="time"><RakeGroup description="" fullCmd="" taksId="zones"><RakeTask description="Displays all time zones, also available: time:zones:us, time:zones:local -- filter with OFFSET parameter, e.g., OFFSET=-6" fullCmd="time:zones:all" taksId="all" /><RakeTask description="" fullCmd="time:zones:local" taksId="local" /><RakeTask description="" fullCmd="time:zones:us" taksId="us" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="tire"><RakeGroup description="" fullCmd="" taksId="import"><RakeTask description="Import all indices from `app/models` (or use DIR environment variable)" fullCmd="tire:import:all" taksId="all" /><RakeTask description="Import data from your model (pass name as CLASS environment variable)" fullCmd="tire:import:model" taksId="model" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="index"><RakeTask description="Delete indices passed in the INDEX/INDICES environment variable; separate multiple indices by comma" fullCmd="tire:index:drop" taksId="drop" /><RakeTask description="Create Elasticsearch index with mappings" fullCmd="tire:index:rebuild" taksId="rebuild" /><RakeTask description="Seed index with all listings" fullCmd="tire:index:seed" taksId="seed" /></RakeGroup><RakeTask description="" fullCmd="tire:import" taksId="import" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="tmp"><RakeTask description="Clear session, cache, and socket files from tmp/ (narrow w/ tmp:sessions:clear, tmp:cache:clear, tmp:sockets:clear)" fullCmd="tmp:clear" taksId="clear" /><RakeTask description="Creates tmp directories for sessions, cache, sockets, and pids" fullCmd="tmp:create" taksId="create" /><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="" fullCmd="tmp:cache:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="pids"><RakeTask description="" fullCmd="tmp:pids:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sessions"><RakeTask description="" fullCmd="tmp:sessions:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sockets"><RakeTask description="" fullCmd="tmp:sockets:clear" taksId="clear" /></RakeGroup></RakeGroup><RakeTask description="" fullCmd="check_test_listing" taksId="check_test_listing" /><RakeGroup description="" fullCmd="" taksId="cleanup"><RakeTask description="" fullCmd="cleanup:auctions" taksId="auctions" /><RakeTask description="" fullCmd="cleanup:listings" taksId="listings" /></RakeGroup><RakeTask description="" fullCmd="crawl" taksId="crawl" /><RakeTask description="" fullCmd="default" taksId="default" /><RakeGroup description="" fullCmd="" taksId="delete"><RakeTask description="" fullCmd="delete:listings" taksId="listings" /></RakeGroup><RakeTask description="" fullCmd="doc" taksId="doc" /><RakeTask description="" fullCmd="doc/app" taksId="doc/app" /><RakeTask description="" fullCmd="doc/app/index.html" taksId="doc/app/index.html" /><RakeTask description="" fullCmd="environment" taksId="environment" /><RakeTask description="" fullCmd="features" taksId="features" /><RakeTask description="" fullCmd="html" taksId="html" /><RakeTask description="" fullCmd="html/index.html" taksId="html/index.html" /><RakeGroup description="" fullCmd="" taksId="index"><RakeTask description="" fullCmd="index:create" taksId="create" /><RakeTask description="" fullCmd="index:create_with_alias" taksId="create_with_alias" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="local_index"><RakeTask description="" fullCmd="local_index:create" taksId="create" /><RakeTask description="" fullCmd="local_index:dump_mappings" taksId="dump_mappings" /><RakeTask description="" fullCmd="local_index:refresh" taksId="refresh" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="migrate"><RakeTask description="" fullCmd="migrate:geo_data" taksId="geo_data" /><RakeTask description="" fullCmd="migrate:listings" taksId="listings" /><RakeTask description="" fullCmd="migrate:script_sites" taksId="script_sites" /></RakeGroup><RakeTask description="" fullCmd="noop" taksId="noop" /><RakeTask description="" fullCmd="overwrite_parser_tests" taksId="overwrite_parser_tests" /><RakeGroup description="" fullCmd="" taksId="railties"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="" fullCmd="railties:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="service"><RakeTask description="" fullCmd="service:boot_all" taksId="boot_all" /><RakeTask description="" fullCmd="service:clean_boot_all" taksId="clean_boot_all" /><RakeTask description="" fullCmd="service:clear_all_grid_state" taksId="clear_all_grid_state" /><RakeTask description="" fullCmd="service:reset_sidekiq" taksId="reset_sidekiq" /><RakeTask description="" fullCmd="service:reset_sidekiq_stats" taksId="reset_sidekiq_stats" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="snapshot"><RakeTask description="" fullCmd="snapshot:create" taksId="create" /><RakeTask description="" fullCmd="snapshot:create_repository" taksId="create_repository" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="stretched"><RakeTask description="" fullCmd="stretched:register_all" taksId="register_all" /><RakeTask description="" fullCmd="stretched:register_globals" taksId="register_globals" /><RakeTask description="" fullCmd="stretched:register_scripts" taksId="register_scripts" /><RakeTask description="" fullCmd="stretched:register_sites" taksId="register_sites" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="" fullCmd="test:prepare" taksId="prepare" /></RakeGroup><RakeTask description="" fullCmd="tmp" taksId="tmp" /><RakeTask description="" fullCmd="tmp/cache" taksId="tmp/cache" /><RakeTask description="" fullCmd="tmp/cache/assets" taksId="tmp/cache/assets" /><RakeTask description="" fullCmd="tmp/cache/assets/development" taksId="tmp/cache/assets/development" /><RakeTask description="" fullCmd="tmp/cache/assets/production" taksId="tmp/cache/assets/production" /><RakeTask description="" fullCmd="tmp/cache/assets/test" taksId="tmp/cache/assets/test" /><RakeTask description="" fullCmd="tmp/pids" taksId="tmp/pids" /><RakeTask description="" fullCmd="tmp/sessions" taksId="tmp/sessions" /><RakeTask description="" fullCmd="tmp/sockets" taksId="tmp/sockets" /><RakeTask description="" fullCmd="write_from_local" taksId="write_from_local" /></RakeGroup></Settings>
